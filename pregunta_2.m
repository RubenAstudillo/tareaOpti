fun = @(x,y) (-1/(1+(x-2)^2 + 2*(y+1)^2)) - ...
             (0.7/(1 + (x+1)^2 + 2*(y-2)^2));

## generada con maxima-CAS
fun_grad = { @(x,y) (2*(x-2))/(2*(y+1)^2+(x-2)^2+1)^2 + ...
              (1.4*(x+1))/(2*(y-2)^2+(x+1)^2+1)^2, ...
             @(x,y) (4*(y+1))/(2*(y+1)^2+(x-2)^2+1)^2 + ...
              (2.8*(y-2))/(2*(y-2)^2+(x+1)^2+1)^2 };

## como una pesadilla verdad?
fun_hess = { @(x,y) 2/(2*(y+1)^2 + (x-2)^2+1)^2 - ...
               (8*(x-2)^2)/(2*(y+1)^2 + (x-2)^2+1)^3 + ...
               1.4/(2*(y-2)^2+(x+1)^2+1)^2 - ...
               (5.6*(x+1)^2)/(2*(y-2)^2+(x+1)^2+1)^3 , ...
             @(x,y) -(16*(x-2)*(y+1))/(2*(y+1)^2+(x-2)^2+1)^3 - ...
               (11.2*(x+1)*(y-2))/(2*(y-2)^2+(x+1)^2+1)^3 ; ...
             @(x,y) -(16*(x-2)*(y+1))/(2*(y+1)^2+(x-2)^2+1)^3 - ...
             (11.2*(x+1)*(y-2))/(2*(y-2)^2+(x+1)^2+1)^3 , ...
             @(x,y) 4/(2*(y+1)^2+(x-2)^2+1)^2 - ...
               (32*(y+1)^2)/(2*(y+1)^2+(x-2)^2+1)^3 - ...
               (22.4*(y-2)^2)/(2*(y-2)^2+(x+1)^2+1)^3 + ...
               2.8/(2*(y-2)^2+(x+1)^2+1)^2 };

xAxis = linspace(-10,10,100);
yAxis = linspace(-10,10,100);
for x=1:100
  for y=1:100
    z(x,y) = fun(xAxis(x), yAxis(y));
  end
end
meshc(xAxis, yAxis, z)

points = {[1.5 -2.5] [1.5 2.5] [0 0] [1 1] [-3 -3]};

sprintf('x0 alpha lambda iteraciones punto-final valor')
for x0 = 1:5
  for (lambda = linspace(0.25,1.6,5))
    for (alpha = linspace(0.25,1.6,5))
      [iter, x1] = levenbert(10000, alpha, lambda, fun_hess, ...
                             fun_grad, points{x0});
      value = fun(num2cell(x1){:});
      sprintf('(%.2f, %.2f) %.3f %.3f %d (%.2f, %.2f) %.2f', points{x0}(1), ...
              points{x0}(2), alpha, lambda, iter, x1(1), x1(2), value)
    end
  end
end
